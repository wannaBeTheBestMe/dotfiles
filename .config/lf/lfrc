set hidden
set info size:time
# Set dircounts
set shell sh
set shellopts '-eu' # Safer shell commands
set ifs "\n" # Internal field separator (IFS)
set scrolloff 10 # Leave some space at the top and the bottom
set icons true
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

# Define a custom 'open' command which is called when the current file is not a
# directory. You may want to use either file extensions and/or mime types here.
# Below uses an editor for text files and a file opener for the rest.
cmd open ${{
    test -L $f && f=$(readlink -f $f)
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd touch ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# Define a custom 'rename' command without prompt for overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

# Make sure trash folder exists
# %mkdir -p ~/.trash

# Move current file or selected files to trash folder
# (Also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# Extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# Compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# Compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Shortcuts
cmd go_doc cd ~/Documents
cmd go_down cd ~/Downloads
cmd go_comm cd ~/Desktop
cmd go_mus cd ~/Music
cmd go_pic cd ~/Pictures

map <enter> open
map m
map md mkdir
map mf touch
map x $$f # execute current file (must be executable)
map X !$f
map o $mimeopen $f # dedicated keys for file opener actions
map O $mimeopen --ask $f
map r push :rename<space>
map R $vimv $fx
map <delete> delete
map E extract
map <c-t> tar
map <c-z> zip
map <c-s> calcdirsize

map gd go_doc
map gD go_down
map gc go_comm
map gm go_mus
map gp go_pic
